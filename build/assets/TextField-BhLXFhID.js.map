{"version":3,"file":"TextField-BhLXFhID.js","sources":["../../src/components/FormFields/TextField.tsx"],"sourcesContent":["import { Field, Input, makeStyles, mergeClasses, tokens, type FieldProps, type InputProps, type TextProps, Text, typographyStyles } from \"@fluentui/react-components\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useWfgFormContext } from \"../../hooks/useWfgFormContext\";\r\nimport { csvToSet } from \"../../utils\";\r\nimport { useFormInitQuery } from \"../../hooks/useFormInitQuery\";\r\nimport { useStore } from \"@tanstack/react-form\";\r\nimport { useFieldContext } from \"../../hooks/formContext\";\r\n\r\ntype TextFieldProps = InputProps & {\r\n    fieldProps?: FieldProps\r\n    readonlyFieldProps?: FieldProps\r\n    readonlyInputProps?: InputProps\r\n    printFieldProps?: FieldProps\r\n    printTextProps?: TextProps\r\n};\r\n\r\nexport const usePrintStyles = makeStyles({\r\n    text: {\r\n        minHeight: '32px',\r\n        ...typographyStyles.body1,\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        boxSizing: 'border-box',\r\n        padding: `0 ${tokens.spacingHorizontalM}`\r\n    },\r\n    small: {\r\n        minHeight: '24px',\r\n        ...typographyStyles.caption1,\r\n        padding: `0 ${tokens.spacingHorizontalS}`\r\n    },\r\n    large: {\r\n        minHeight: '40px',\r\n        ...typographyStyles.body2,\r\n        padding: `0 calc(${tokens.spacingHorizontalM} + ${tokens.spacingHorizontalSNudge})`\r\n    },\r\n    readonly: {\r\n        '& input': {\r\n            cursor: 'default !important'\r\n        }\r\n    }\r\n});\r\nfunction PrintView(props: TextFieldProps) {\r\n    const { printFieldProps = props.fieldProps, printTextProps = {} } = props;\r\n    const styles = usePrintStyles();\r\n    const field = useFieldContext<string | null>();\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Field\r\n            label={t(field.name)}\r\n            {...printFieldProps}\r\n        >\r\n            <Text \r\n                className={mergeClasses(styles.text, printFieldProps?.size === 'small' && styles.small, printFieldProps?.size === 'large' && styles.large, printTextProps.className)}\r\n            >\r\n                {field.state.value}\r\n            </Text>\r\n        </Field>\r\n    );\r\n}\r\nfunction ReadonlyView(props: TextFieldProps) {\r\n    const { readonlyFieldProps = props.fieldProps, readonlyInputProps = {} } = props;\r\n    const styles = usePrintStyles();\r\n    const field = useFieldContext<string | null>();\r\n    const { t } = useTranslation();\r\n    const { form } = useWfgFormContext();\r\n\r\n    return (\r\n        <form.Subscribe \r\n            selector={s => s.values.Table1[0].FORM_FIELDS_REQUIRED}\r\n            children={FORM_FIELDS_REQUIRED => {\r\n                const requiredFields = csvToSet(FORM_FIELDS_REQUIRED);\r\n                const required = requiredFields.has(field.name.replace('Table1[0].', ''));\r\n                return (\r\n                    <Field\r\n                        required={required}\r\n                        label={t(field.name)}\r\n                        {...readonlyFieldProps}\r\n                    >\r\n                        <Input \r\n                            readOnly\r\n                            defaultValue={field.state.value ?? ''}\r\n                            className={styles.readonly}\r\n                            {...readonlyInputProps}\r\n                        />\r\n                    </Field>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n}\r\nfunction View(props: TextFieldProps) {\r\n    const { fieldProps = {}, readonlyFieldProps, readonlyInputProps, printFieldProps, printTextProps, ...inputProps } = props;\r\n    const field = useFieldContext<string | null>();\r\n    const { t } = useTranslation();\r\n    const { form } = useWfgFormContext();\r\n    const value = field.state.value ?? '';\r\n\r\n    return (\r\n        <form.Subscribe \r\n            selector={s => s.values.Table1[0].FORM_FIELDS_REQUIRED}\r\n            children={FORM_FIELDS_REQUIRED => {\r\n                const requiredFields = csvToSet(FORM_FIELDS_REQUIRED);\r\n                const required = requiredFields.has(field.name.replace('Table1[0].', ''));\r\n                return (\r\n                    <Field\r\n                        required={required}\r\n                        label={t(field.name)}\r\n                        validationMessage={field.state.meta.isTouched && field.state.meta.errors.length > 0 ? t(field.state.meta.errors[0], { length: field.state.meta.errors[0].rule, actual: value.length }) : null}\r\n                        {...fieldProps}\r\n                    >\r\n                        <Input\r\n                            value={value}\r\n                            onChange={(_, { value }) => { field.handleChange(value); }}\r\n                            onBlur={() => { field.handleBlur(); }}\r\n                            {...inputProps}\r\n                        />\r\n                    </Field>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n}\r\nexport default (props: TextFieldProps) => {\r\n    const field = useFieldContext();\r\n    const { form, printForm: { state: { values: { open: isPrintView } } } } = useWfgFormContext();\r\n    const { isArchive } = useFormInitQuery();\r\n    const FORM_FIELDS_READONLY = useStore(form.store, s => s.values.Table1[0].FORM_FIELDS_READONLY ?? '');\r\n    const readonlyFields = csvToSet(FORM_FIELDS_READONLY);\r\n    return isPrintView ? <PrintView {...props} /> : isArchive || readonlyFields.has(field.name.replace('Table1[0].', '')) ? <ReadonlyView {...props} /> : <View {...props} />;\r\n};"],"names":["usePrintStyles","makeStyles","typographyStyles","tokens","PrintView","props","printFieldProps","printTextProps","styles","field","useFieldContext","t","useTranslation","jsx","Field","Text","mergeClasses","ReadonlyView","readonlyFieldProps","readonlyInputProps","form","useWfgFormContext","s","FORM_FIELDS_REQUIRED","required","csvToSet","Input","View","fieldProps","inputProps","value","_","TextField","isPrintView","isArchive","useFormInitQuery","FORM_FIELDS_READONLY","useStore","readonlyFields"],"mappings":"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"}