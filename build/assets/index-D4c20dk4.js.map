{"version":3,"file":"index-D4c20dk4.js","sources":["../../src/components/Comments/CommentChatMessage.tsx","../../src/components/Comments/index.tsx"],"sourcesContent":["import { ChatMessage } from \"@fluentui-contrib/react-chat\";\r\nimport type { Comment } from \"../../types\";\r\nimport { Avatar, makeStyles, mergeClasses, tokens } from \"@fluentui/react-components\";\r\nimport { directoryColors } from \"../../utils\";\r\nimport dayjs from \"dayjs\";\r\nimport { CommentCheckmarkRegular, CommentDismissRegular } from \"@fluentui/react-icons\";\r\nimport { useFormInitQuery } from \"../../hooks/useFormInitQuery\";\r\n\r\nconst useStyles = makeStyles({\r\n    chatMessage: {\r\n        whiteSpace: 'pre-wrap'\r\n    },\r\n    chatRejectionMessage: {\r\n        borderLeftColor: tokens.colorPaletteRedBorder1\r\n    },\r\n    chatRejectionDecorationIcon: {\r\n        backgroundColor: tokens.colorPaletteRedBackground3\r\n    },\r\n    chatRejectionDecorationLabel: {\r\n        color: tokens.colorPaletteRedForeground1\r\n    },\r\n    chatApprovalMessage: {\r\n        borderLeftColor: tokens.colorPaletteGreenBorder1\r\n    },\r\n    chatApprovalDecorationIcon: {\r\n        backgroundColor: tokens.colorPaletteGreenBackground3\r\n    },\r\n    chatApprovalDecorationLabel: {\r\n        color: tokens.colorPaletteGreenForeground1\r\n    }\r\n});\r\n\r\nconst CommentChatMessageAvatar = ({ comment }: { comment: Comment }) => <Avatar name={comment.Author} color={directoryColors.get(comment.Directory)} />;\r\n\r\nexport const CommentChatMessage = ({ comment }: { comment: Comment }) => {\r\n    const styles = useStyles();\r\n    const { timeZoneInfo } = useFormInitQuery();\r\n    const timestamp = dayjs(comment.Created);\r\n    return (\r\n        <ChatMessage\r\n            body={{ className: styles.chatMessage }}\r\n            avatar={<CommentChatMessageAvatar comment={comment} />}\r\n            author={comment.Author}\r\n            decorationLabel={`${comment.ProcessName} / ${comment.ActivityName}`}\r\n            timestamp={timestamp.utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\r\n        >\r\n            {comment.Comment}\r\n        </ChatMessage>\r\n    );\r\n}\r\n\r\nexport const ApprovalCommentChatMessage = ({ comment }: { comment: Comment }) => {\r\n    const styles = useStyles();\r\n    const { timeZoneInfo } = useFormInitQuery();\r\n    const timestamp = dayjs(comment.Created);\r\n    return (\r\n        <ChatMessage\r\n            body={{ className: mergeClasses(styles.chatMessage, styles.chatApprovalMessage) }}\r\n            avatar={<CommentChatMessageAvatar comment={comment} />}\r\n            author={comment.Author}\r\n            decorationLabel={{ className: styles.chatApprovalDecorationLabel, children: `${comment.ProcessName} / ${comment.ActivityName}` }}\r\n            decorationIcon={{ className: styles.chatApprovalDecorationIcon, children: <CommentCheckmarkRegular /> }}\r\n            timestamp={timestamp.utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\r\n        >\r\n            {comment.Comment}\r\n        </ChatMessage>\r\n    );\r\n}\r\n\r\nexport const RejectionCommentChatMessage = ({ comment }: { comment: Comment }) => {\r\n    const styles = useStyles();\r\n    const { timeZoneInfo } = useFormInitQuery();\r\n    const timestamp = dayjs(comment.Created);\r\n    return (\r\n        <ChatMessage\r\n            body={{ className: mergeClasses(styles.chatMessage, styles.chatRejectionMessage) }}\r\n            avatar={<CommentChatMessageAvatar comment={comment} />}\r\n            author={comment.Author}\r\n            decorationLabel={{ className: styles.chatRejectionDecorationLabel, children: `${comment.ProcessName} / ${comment.ActivityName}` }}\r\n            decorationIcon={{ className: styles.chatRejectionDecorationIcon, children: <CommentDismissRegular /> }}\r\n            timestamp={timestamp.utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\r\n        >\r\n            {comment.Comment}\r\n        </ChatMessage>\r\n    );\r\n}\r\n\r\nexport const commentChatMessages = new Map<Comment['Type'], ({ comment }: { comment: Comment }) => JSX.Element>([\r\n    [\"APPROVAL\", ApprovalCommentChatMessage],\r\n    [\"REJECTION\", RejectionCommentChatMessage],\r\n    [\"COMMENT\", CommentChatMessage]\r\n]);","import { Chat } from \"@fluentui-contrib/react-chat\";\r\nimport { commentChatMessages } from \"./CommentChatMessage\";\r\nimport type { Comment } from \"../../types\";\r\nimport { makeStyles } from \"@fluentui/react-components\";\r\nimport { useFieldContext } from \"../../hooks/formContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 'unset'\r\n    }\r\n});\r\nexport default () => {\r\n    const styles = useStyles();\r\n    const comments = useFieldContext<Comment[]>();\r\n    return (\r\n        <Chat className={styles.root}>\r\n            {comments.state.value.map((comment, i) => {\r\n                const CommentChatMessage = commentChatMessages.get(comment.Type)!;\r\n                return <CommentChatMessage key={i} comment={comment} />;\r\n            })}\r\n        </Chat>\r\n    );\r\n};"],"names":["useStyles","makeStyles","tokens","CommentChatMessageAvatar","comment","jsx","Avatar","directoryColors","CommentChatMessage","styles","timeZoneInfo","useFormInitQuery","timestamp","dayjs","ChatMessage","ApprovalCommentChatMessage","mergeClasses","CommentCheckmarkRegular","RejectionCommentChatMessage","CommentDismissRegular","commentChatMessages","index","comments","useFieldContext","Chat","i"],"mappings":"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"}