{"version":3,"file":"RadioGroup-BtrwkNLB.js","sources":["../../node_modules/.pnpm/@fluentui+react-radio@9.3.6_@types+react-dom@18.3.6_@types+react@18.3.20__@types+react@_b17b8cea542c43fe4594c4c3e69c6fa6/node_modules/@fluentui/react-radio/lib/components/RadioGroup/renderRadioGroup.js","../../node_modules/.pnpm/@fluentui+react-radio@9.3.6_@types+react-dom@18.3.6_@types+react@18.3.20__@types+react@_b17b8cea542c43fe4594c4c3e69c6fa6/node_modules/@fluentui/react-radio/lib/components/RadioGroup/useRadioGroup.js","../../node_modules/.pnpm/@fluentui+react-radio@9.3.6_@types+react-dom@18.3.6_@types+react@18.3.20__@types+react@_b17b8cea542c43fe4594c4c3e69c6fa6/node_modules/@fluentui/react-radio/lib/components/RadioGroup/useRadioGroupStyles.styles.js","../../node_modules/.pnpm/@fluentui+react-radio@9.3.6_@types+react-dom@18.3.6_@types+react@18.3.20__@types+react@_b17b8cea542c43fe4594c4c3e69c6fa6/node_modules/@fluentui/react-radio/lib/contexts/useRadioGroupContextValues.js","../../node_modules/.pnpm/@fluentui+react-radio@9.3.6_@types+react-dom@18.3.6_@types+react@18.3.20__@types+react@_b17b8cea542c43fe4594c4c3e69c6fa6/node_modules/@fluentui/react-radio/lib/components/RadioGroup/RadioGroup.js","../../src/components/FormFields/RadioGroup.tsx"],"sourcesContent":["  import { jsx as _jsx } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\nimport { RadioGroupContext } from '../../contexts/RadioGroupContext';\n/**\n * Render the final JSX of RadioGroup\n */ export const renderRadioGroup_unstable = (state, contextValues)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsx(RadioGroupContext.Provider, {\n        value: contextValues.radioGroup,\n        children: /*#__PURE__*/ _jsx(state.root, {})\n    });\n};\n","import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getIntrinsicElementProps, isHTMLElement, useEventCallback, useId, slot } from '@fluentui/react-utilities';\n/**\n * Create the state required to render RadioGroup.\n *\n * The returned state can be modified with hooks such as useRadioGroupStyles_unstable,\n * before being passed to renderRadioGroup_unstable.\n *\n * @param props - props from this instance of RadioGroup\n * @param ref - reference to root HTMLElement of RadioGroup\n */ export const useRadioGroup_unstable = (props, ref)=>{\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props);\n    const generatedName = useId('radiogroup-');\n    const { name = generatedName, value, defaultValue, disabled, layout = 'vertical', onChange, required } = props;\n    return {\n        layout,\n        name,\n        value,\n        defaultValue,\n        disabled,\n        required,\n        components: {\n            root: 'div'\n        },\n        root: {\n            ref,\n            role: 'radiogroup',\n            ...slot.always(getIntrinsicElementProps('div', props, /*excludedPropNames:*/ [\n                'onChange',\n                'name'\n            ]), {\n                elementType: 'div'\n            }),\n            onChange: useEventCallback((ev)=>{\n                if (onChange && isHTMLElement(ev.target, {\n                    constructorName: 'HTMLInputElement'\n                }) && ev.target.type === 'radio') {\n                    onChange(ev, {\n                        value: ev.target.value\n                    });\n                }\n            })\n        }\n    };\n};\n","import { __styles, mergeClasses } from '@griffel/react';\nexport const radioGroupClassNames = {\n  root: 'fui-RadioGroup'\n};\nconst useStyles = /*#__PURE__*/__styles({\n  root: {\n    mc9l5x: \"f22iagw\",\n    Bt984gj: \"f6jr5hl\"\n  },\n  vertical: {\n    Beiy3e4: \"f1vx9l62\"\n  }\n}, {\n  d: [\".f22iagw{display:flex;}\", \".f6jr5hl{align-items:flex-start;}\", \".f1vx9l62{flex-direction:column;}\"]\n});\n/**\n * Apply styling to the RadioGroup slots based on the state\n */\nexport const useRadioGroupStyles_unstable = state => {\n  'use no memo';\n\n  const styles = useStyles();\n  state.root.className = mergeClasses(radioGroupClassNames.root, styles.root, state.layout === 'vertical' && styles.vertical, state.root.className);\n  return state;\n};","import * as React from 'react';\nexport const useRadioGroupContextValues = (state)=>{\n    const { name, value, defaultValue, disabled, layout, required } = state;\n    const ariaDescribedBy = state.root['aria-describedby'];\n    const radioGroup = React.useMemo(()=>({\n            name,\n            value,\n            defaultValue,\n            disabled,\n            layout,\n            required,\n            'aria-describedby': ariaDescribedBy\n        }), [\n        name,\n        value,\n        defaultValue,\n        disabled,\n        layout,\n        required,\n        ariaDescribedBy\n    ]);\n    return {\n        radioGroup\n    };\n};\n","import * as React from 'react';\nimport { renderRadioGroup_unstable } from './renderRadioGroup';\nimport { useRadioGroup_unstable } from './useRadioGroup';\nimport { useRadioGroupStyles_unstable } from './useRadioGroupStyles.styles';\nimport { useRadioGroupContextValues } from '../../contexts/useRadioGroupContextValues';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * A RadioGroup component presents a set of options where only one option can be selected.\n */ export const RadioGroup = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useRadioGroup_unstable(props, ref);\n    const contextValues = useRadioGroupContextValues(state);\n    useRadioGroupStyles_unstable(state);\n    useCustomStyleHook_unstable('useRadioGroupStyles_unstable')(state);\n    return renderRadioGroup_unstable(state, contextValues);\n});\nRadioGroup.displayName = 'RadioGroup';\n","import { Text, Field, RadioGroup, makeStyles, mergeClasses, type FieldProps, type RadioGroupProps as FUIRadioGroupProps, type TextProps } from \"@fluentui/react-components\";\nimport { useFieldContext } from \"../../hooks/formContext\";\nimport { useTranslation } from \"react-i18next\";\nimport { useWfgFormContext } from \"../../hooks/useWfgFormContext\";\nimport { csvToSet } from \"../../utils\";\nimport { usePrintStyles } from \"./TextField\";\nimport { useFormInitQuery } from \"../../hooks/useFormInitQuery\";\nimport { useStore } from \"@tanstack/react-form\";\n\ntype RadioGroupProps = Partial<FUIRadioGroupProps> & {\n    fieldProps?: FieldProps\n    readonlyFieldProps?: FieldProps\n    readonlyRadioGroupProps?: Partial<FUIRadioGroupProps>\n    printFieldProps?: FieldProps\n    printTextProps?: TextProps\n};\n\nconst useStyles = makeStyles({\n    readonly: {\n        '& .fui-Radio__input, & .fui-Radio__label': {\n            cursor: 'default !important'\n        }\n    }\n});\n\nfunction PrintView(props: RadioGroupProps) {\n    const { printFieldProps = props.fieldProps, printTextProps = {} } = props;\n    const styles = usePrintStyles();\n    const field = useFieldContext<string | null>();\n    const { t } = useTranslation();\n\n    return (\n        <Field\n            label={t(field.name)}\n            {...printFieldProps}\n        >\n            <Text \n                className={mergeClasses(styles.text, printFieldProps?.size === 'small' && styles.small, printFieldProps?.size === 'large' && styles.large, printTextProps.className)}\n            >\n                {field.state.value}\n            </Text>\n        </Field>\n    );\n}\nfunction ReadonlyView(props: RadioGroupProps) {\n    const { readonlyFieldProps = props.fieldProps, readonlyRadioGroupProps = {} } = props;\n    const styles = useStyles();\n    const field = useFieldContext<string | null>();\n    const { t } = useTranslation();\n    const { form } = useWfgFormContext();\n\n    return (\n        <form.Subscribe \n            selector={s => s.values.Table1[0].FORM_FIELDS_REQUIRED}\n            children={FORM_FIELDS_REQUIRED => {\n                const requiredFields = csvToSet(FORM_FIELDS_REQUIRED);\n                const required = requiredFields.has(field.name.replace('Table1[0].', ''));\n                return (\n                    <Field\n                        required={required}\n                        label={t(field.name)}\n                        {...readonlyFieldProps}\n                    >\n                        <RadioGroup \n                            onChange={() => {}}\n                            value={field.state.value ?? ''}\n                            {...readonlyRadioGroupProps}\n                            className={mergeClasses(styles.readonly, readonlyRadioGroupProps.className)}\n                        />\n                    </Field>\n                );\n            }}\n        />\n    );\n}\nfunction View(props: RadioGroupProps) {\n    const { fieldProps = {}, readonlyFieldProps, readonlyRadioGroupProps, printFieldProps, printTextProps, ...radioGroupProps } = props;\n    const field = useFieldContext<string | null>();\n    const { t } = useTranslation();\n    const { form } = useWfgFormContext();\n    const value = field.state.value ?? '';\n\n    return (\n        <form.Subscribe \n            selector={s => s.values.Table1[0].FORM_FIELDS_REQUIRED}\n            children={FORM_FIELDS_REQUIRED => {\n                const requiredFields = csvToSet(FORM_FIELDS_REQUIRED);\n                const required = requiredFields.has(field.name.replace('Table1[0].', ''));\n                return (\n                    <Field\n                        required={required}\n                        label={t(field.name)}\n                        validationMessage={field.state.meta.isTouched && field.state.meta.errors.length > 0 ? t(field.state.meta.errors[0], { length: field.state.meta.errors[0].rule, actual: value.length }) : null}\n                        {...fieldProps}\n                    >\n                        <RadioGroup \n                            value={value}\n                            onChange={(_, { value }) => { field.handleChange(value); }}\n                            {...radioGroupProps}\n                        />\n                    </Field>\n                );\n            }}\n        />\n    );\n}\nexport default (props: RadioGroupProps) => {\n    const field = useFieldContext();\n    const { form, printForm: { state: { values: { open: isPrintView } } } } = useWfgFormContext();\n    const { isArchive } = useFormInitQuery();\n    const FORM_FIELDS_READONLY = useStore(form.store, s => s.values.Table1[0].FORM_FIELDS_READONLY ?? '');\n    const readonlyFields = csvToSet(FORM_FIELDS_READONLY);\n    return isPrintView ? <PrintView {...props} /> : isArchive || readonlyFields.has(field.name.replace('Table1[0].', '')) ? <ReadonlyView {...props} /> : <View {...props} />;\n};"],"names":["renderRadioGroup_unstable","state","contextValues","_jsx","RadioGroupContext","useRadioGroup_unstable","props","ref","useFieldControlProps_unstable","generatedName","useId","name","value","defaultValue","disabled","layout","onChange","required","slot.always","getIntrinsicElementProps","useEventCallback","ev","isHTMLElement","radioGroupClassNames","useStyles","__styles","useRadioGroupStyles_unstable","styles","mergeClasses","useRadioGroupContextValues","ariaDescribedBy","React.useMemo","RadioGroup","React.forwardRef","useCustomStyleHook_unstable","makeStyles","PrintView","printFieldProps","printTextProps","usePrintStyles","field","useFieldContext","t","useTranslation","jsx","Field","Text","ReadonlyView","readonlyFieldProps","readonlyRadioGroupProps","form","useWfgFormContext","s","FORM_FIELDS_REQUIRED","csvToSet","View","fieldProps","radioGroupProps","_","isPrintView","isArchive","useFormInitQuery","FORM_FIELDS_READONLY","useStore","readonlyFields"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}