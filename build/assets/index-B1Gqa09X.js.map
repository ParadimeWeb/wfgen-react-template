{"version":3,"file":"index-B1Gqa09X.js","sources":["../../src/components/Approvals/ApprovalChatMessage.tsx","../../src/components/Approvals/index.tsx"],"sourcesContent":["import { Chat, ChatMessage } from \"@fluentui-contrib/react-chat\";\r\nimport type { Approval, Comment } from \"../../types\";\r\nimport { Avatar, makeStyles, mergeClasses, tokens } from \"@fluentui/react-components\";\r\nimport { directoryColors } from \"../../utils\";\r\nimport dayjs from \"dayjs\";\r\nimport { CommentRegular, ShieldDismissRegular, ShieldRegular, ShieldTaskRegular } from \"@fluentui/react-icons\";\r\nimport { useFormInitQuery } from \"../../hooks/useFormInitQuery\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useWfgFormContext } from \"../../hooks/useWfgFormContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    chatMessage: {\r\n        whiteSpace: 'pre-wrap'\r\n    },\r\n    chatPendingMessage: {\r\n        borderLeftColor: tokens.colorNeutralForeground4\r\n    },\r\n    chatPendingDecorationIcon: {\r\n        backgroundColor: tokens.colorNeutralForeground2\r\n    },\r\n    chatPendingDecorationLabel: {\r\n        color: tokens.colorNeutralForeground3\r\n    },\r\n    chatRejectionMessage: {\r\n        borderLeftColor: tokens.colorPaletteRedBorder1\r\n    },\r\n    chatRejectionDecorationIcon: {\r\n        backgroundColor: tokens.colorPaletteRedBackground3\r\n    },\r\n    chatRejectionDecorationLabel: {\r\n        color: tokens.colorPaletteRedForeground1\r\n    },\r\n    chatApprovalMessage: {\r\n        borderLeftColor: tokens.colorPaletteGreenBorder1\r\n    },\r\n    chatApprovalDecorationIcon: {\r\n        backgroundColor: tokens.colorPaletteGreenBackground3\r\n    },\r\n    chatApprovalDecorationLabel: {\r\n        color: tokens.colorPaletteGreenForeground1\r\n    },\r\n    otherChatMessage: {\r\n        paddingTop: '2px',\r\n        paddingBottom: '2px'\r\n    }\r\n});\r\n\r\nfunction OtherComments({ comments, approval }: { comments: Comment[], approval: Approval }) {\r\n    const styles = useStyles();\r\n    const { timeZoneInfo } = useFormInitQuery();\r\n    const userName = approval.ApprovedByUserName ?? approval.ApproverUserName ?? '';\r\n\r\n    return (\r\n        <Chat>\r\n            {comments.map((c, i) => {\r\n                if (c.Type === 'REJECTION') {\r\n                    return (\r\n                        <ChatMessage \r\n                            key={`chatMessage-${i}`}\r\n                            root={{ className: styles.otherChatMessage }}\r\n                            body={{ className: mergeClasses(styles.chatMessage, styles.chatRejectionMessage) }}\r\n                            author={userName !== c.UserName ? c.Author : null}\r\n                            decorationLabel={{ className: styles.chatRejectionDecorationLabel }}\r\n                            decorationIcon={{ className: styles.chatRejectionDecorationIcon, children: <CommentRegular /> }}\r\n                            timestamp={dayjs(c.Created).utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\r\n                        >\r\n                            {c.Comment}\r\n                        </ChatMessage>\r\n                    );\r\n                }\r\n                return (\r\n                    <ChatMessage\r\n                        key={`chatMessage-${i}`}\r\n                        root={{ className: styles.otherChatMessage }}\r\n                        body={{ className: mergeClasses(styles.chatMessage, styles.chatApprovalMessage) }}\r\n                        author={userName !== c.UserName ? c.Author : null}\r\n                        decorationLabel={{ className: styles.chatApprovalDecorationLabel }}\r\n                        decorationIcon={{ className: styles.chatApprovalDecorationIcon, children: <CommentRegular /> }}\r\n                        timestamp={dayjs(c.Created).utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\r\n                    >\r\n                        {c.Comment}\r\n                    </ChatMessage>\r\n                );\r\n            })}\r\n        </Chat>\r\n    );\r\n}\r\n\r\nexport const ApprovalChatMessage = ({ approval }: { approval: Approval }) => {\r\n    const styles = useStyles();\r\n    const { t } = useTranslation();\r\n    const { timeZoneInfo } = useFormInitQuery();\r\n    const { form } = useWfgFormContext();\r\n    const name = approval.ApprovedByName ?? approval.ApproverName ?? t('Unassigned');\r\n    const directory = approval.ApprovedByDirectory ?? approval.ApproverDirectory ?? '';\r\n\r\n    return (\r\n        <form.Subscribe \r\n            selector={s => s.values.__Comments.filter(c => c.Role === approval.Role)}\r\n            children={comments => {\r\n                const approvalComment = comments.find(c => c.ActivityInstId === approval.ActivityInstId);\r\n                const otherComments = comments.filter(c => c.ActivityInstId !== approval.ActivityInstId);\r\n                if (approval.Approval === 'APPROVED') {\r\n                    return (<>\r\n                        <ChatMessage\r\n                            body={{ className: mergeClasses(styles.chatMessage, styles.chatApprovalMessage) }}\r\n                            avatar={<Avatar name={name} color={directoryColors.get(directory)} />}\r\n                            author={name}\r\n                            decorationLabel={{ \r\n                                className: styles.chatApprovalDecorationLabel, \r\n                                children: approval.ApprovedByUserName === approval.ApproverUserName ? t('Approved') : t('Approved on behalf of {{ name }}', { name: approval.ApproverName }) \r\n                            }}\r\n                            decorationIcon={{ className: styles.chatApprovalDecorationIcon, children: <ShieldTaskRegular /> }}\r\n                            timestamp={dayjs(approval.Approved).utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\r\n                        >\r\n                            {approvalComment ? approvalComment.Comment : ''}\r\n                        </ChatMessage>\r\n                        {otherComments.length > 0 ? <OtherComments comments={otherComments} approval={approval} /> : null}\r\n                    </>);\r\n                }\r\n                if (approval.Approval === 'REJECTED') {\r\n                    return (<>\r\n                        <ChatMessage\r\n                            body={{ className: mergeClasses(styles.chatMessage, styles.chatRejectionMessage) }}\r\n                            avatar={<Avatar name={name} color={directoryColors.get(directory)} />}\r\n                            author={name}\r\n                            decorationLabel={{ \r\n                                className: styles.chatRejectionDecorationLabel, \r\n                                children: approval.ApprovedByUserName === approval.ApproverUserName ? t('Rejected') : t('Rejected on behalf of {{ name }}', { name: approval.ApproverName }) \r\n                            }}\r\n                            decorationIcon={{ className: styles.chatRejectionDecorationIcon, children: <ShieldDismissRegular /> }}\r\n                            timestamp={dayjs(approval.Approved).utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\r\n                        >\r\n                            {approvalComment ? approvalComment.Comment : ''}\r\n                        </ChatMessage>\r\n                        {otherComments.length > 0 ? <OtherComments comments={otherComments} approval={approval} /> : null}\r\n                    </>);\r\n                }\r\n                return (<>\r\n                    <ChatMessage\r\n                        body={{ className: mergeClasses(styles.chatMessage, styles.chatPendingMessage) }}\r\n                        avatar={<Avatar name={name} color={directoryColors.get(directory)} />}\r\n                        author={name}\r\n                        decorationLabel={{\r\n                            className: styles.chatPendingDecorationLabel, \r\n                            children: t('Pending')\r\n                        }}\r\n                        decorationIcon={{ className: styles.chatPendingDecorationIcon, children: <ShieldRegular /> }}\r\n                    />\r\n                    {comments.length > 0 ? <OtherComments comments={comments} approval={approval} /> : null}\r\n                </>);\r\n            }}\r\n        />\r\n    );\r\n};","import { Chat } from \"@fluentui-contrib/react-chat\";\r\nimport type { Approval } from \"../../types\";\r\nimport { Divider, makeStyles } from \"@fluentui/react-components\";\r\nimport { ApprovalChatMessage } from \"./ApprovalChatMessage\";\r\nimport { t } from \"i18next\";\r\nimport { Fragment } from \"react/jsx-runtime\";\r\nimport { useFieldContext } from \"../../hooks/formContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 'unset'\r\n    }\r\n});\r\nexport default () => {\r\n    const styles = useStyles();\r\n    const approvals = useFieldContext<Approval[]>();\r\n    return approvals.state.value.map((approval, index) => {\r\n        return (\r\n            <Fragment key={index}>\r\n                <Divider>{t(approval.Role)}</Divider>\r\n                <Chat className={styles.root}>\r\n                    <ApprovalChatMessage approval={approval} />\r\n                </Chat>\r\n            </Fragment>\r\n        );\r\n    });\r\n};"],"names":["useStyles","makeStyles","tokens","OtherComments","comments","approval","styles","timeZoneInfo","useFormInitQuery","userName","Chat","c","i","jsx","ChatMessage","mergeClasses","CommentRegular","dayjs","ApprovalChatMessage","useTranslation","form","useWfgFormContext","name","directory","s","approvalComment","otherComments","jsxs","Fragment","Avatar","directoryColors","ShieldTaskRegular","ShieldDismissRegular","ShieldRegular","index","useFieldContext","Divider","t"],"mappings":"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"}