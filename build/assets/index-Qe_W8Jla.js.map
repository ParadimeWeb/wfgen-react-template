{"version":3,"file":"index-Qe_W8Jla.js","sources":["../../src/components/Approvals/ApprovalChatMessage.tsx","../../src/components/Approvals/index.tsx"],"sourcesContent":["import { Chat, ChatMessage } from \"@fluentui-contrib/react-chat\";\nimport type { Approval, Comment } from \"../../types\";\nimport { Avatar, makeStyles, mergeClasses, tokens } from \"@fluentui/react-components\";\nimport { directoryColors } from \"../../utils\";\nimport dayjs from \"dayjs\";\nimport { CommentRegular, ShieldDismissRegular, ShieldRegular, ShieldTaskRegular } from \"@fluentui/react-icons\";\nimport { useFormInitQuery } from \"../../hooks/useFormInitQuery\";\nimport { useTranslation } from \"react-i18next\";\nimport { useWfgFormContext } from \"../../hooks/useWfgFormContext\";\n\nconst useStyles = makeStyles({\n    chatMessage: {\n        whiteSpace: 'pre-wrap'\n    },\n    chatPendingMessage: {\n        borderLeftColor: tokens.colorNeutralForeground4\n    },\n    chatPendingDecorationIcon: {\n        backgroundColor: tokens.colorNeutralForeground2\n    },\n    chatPendingDecorationLabel: {\n        color: tokens.colorNeutralForeground3\n    },\n    chatRejectionMessage: {\n        borderLeftColor: tokens.colorPaletteRedBorder1\n    },\n    chatRejectionDecorationIcon: {\n        backgroundColor: tokens.colorPaletteRedBackground3\n    },\n    chatRejectionDecorationLabel: {\n        color: tokens.colorPaletteRedForeground1\n    },\n    chatApprovalMessage: {\n        borderLeftColor: tokens.colorPaletteGreenBorder1\n    },\n    chatApprovalDecorationIcon: {\n        backgroundColor: tokens.colorPaletteGreenBackground3\n    },\n    chatApprovalDecorationLabel: {\n        color: tokens.colorPaletteGreenForeground1\n    },\n    otherChatMessage: {\n        paddingTop: '2px',\n        paddingBottom: '2px'\n    }\n});\n\nfunction OtherComments({ comments, approval }: { comments: Comment[], approval: Approval }) {\n    const styles = useStyles();\n    const { timeZoneInfo } = useFormInitQuery();\n    const userName = approval.ApprovedByUserName ?? approval.ApproverUserName ?? '';\n\n    return (\n        <Chat>\n            {comments.map((c, i) => {\n                if (c.Type === 'REJECTION') {\n                    return (\n                        <ChatMessage \n                            key={`chatMessage-${i}`}\n                            root={{ className: styles.otherChatMessage }}\n                            body={{ className: mergeClasses(styles.chatMessage, styles.chatRejectionMessage) }}\n                            author={userName !== c.UserName ? c.Author : null}\n                            decorationLabel={{ className: styles.chatRejectionDecorationLabel }}\n                            decorationIcon={{ className: styles.chatRejectionDecorationIcon, children: <CommentRegular /> }}\n                            timestamp={dayjs(c.Created).utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\n                        >\n                            {c.Comment}\n                        </ChatMessage>\n                    );\n                }\n                return (\n                    <ChatMessage\n                        key={`chatMessage-${i}`}\n                        root={{ className: styles.otherChatMessage }}\n                        body={{ className: mergeClasses(styles.chatMessage, styles.chatApprovalMessage) }}\n                        author={userName !== c.UserName ? c.Author : null}\n                        decorationLabel={{ className: styles.chatApprovalDecorationLabel }}\n                        decorationIcon={{ className: styles.chatApprovalDecorationIcon, children: <CommentRegular /> }}\n                        timestamp={dayjs(c.Created).utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\n                    >\n                        {c.Comment}\n                    </ChatMessage>\n                );\n            })}\n        </Chat>\n    );\n}\n\nexport const ApprovalChatMessage = ({ approval }: { approval: Approval }) => {\n    const styles = useStyles();\n    const { t } = useTranslation();\n    const { timeZoneInfo } = useFormInitQuery();\n    const { form } = useWfgFormContext();\n    const name = approval.ApprovedByName ?? approval.ApproverName ?? t('Unassigned');\n    const directory = approval.ApprovedByDirectory ?? approval.ApproverDirectory ?? null;\n\n    return (\n        <form.Subscribe \n            selector={s => s.values.__Comments.filter(c => c.Role === approval.Role)}\n            children={comments => {\n                const approvalComment = comments.find(c => c.ActivityInstId === approval.ActivityInstId);\n                const otherComments = comments.filter(c => c.ActivityInstId !== approval.ActivityInstId);\n                if (approval.Approval === 'APPROVED') {\n                    return (<>\n                        <ChatMessage\n                            body={{ className: mergeClasses(styles.chatMessage, styles.chatApprovalMessage) }}\n                            avatar={<Avatar name={name} color={directory ? directoryColors.get(directory) : \"neutral\"} />}\n                            author={name}\n                            decorationLabel={{ \n                                className: styles.chatApprovalDecorationLabel, \n                                children: approval.ApprovedByUserName === approval.ApproverUserName ? t('Approved') : t('Approved on behalf of {{ name }}', { name: approval.ApproverName }) \n                            }}\n                            decorationIcon={{ className: styles.chatApprovalDecorationIcon, children: <ShieldTaskRegular /> }}\n                            timestamp={dayjs(approval.Approved).utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\n                        >\n                            {approvalComment ? approvalComment.Comment : ''}\n                        </ChatMessage>\n                        {otherComments.length > 0 ? <OtherComments comments={otherComments} approval={approval} /> : null}\n                    </>);\n                }\n                if (approval.Approval === 'REJECTED') {\n                    return (<>\n                        <ChatMessage\n                            body={{ className: mergeClasses(styles.chatMessage, styles.chatRejectionMessage) }}\n                            avatar={<Avatar name={name} color={directory ? directoryColors.get(directory) : \"neutral\"} />}\n                            author={name}\n                            decorationLabel={{ \n                                className: styles.chatRejectionDecorationLabel, \n                                children: approval.ApprovedByUserName === approval.ApproverUserName ? t('Rejected') : t('Rejected on behalf of {{ name }}', { name: approval.ApproverName }) \n                            }}\n                            decorationIcon={{ className: styles.chatRejectionDecorationIcon, children: <ShieldDismissRegular /> }}\n                            timestamp={dayjs(approval.Approved).utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\n                        >\n                            {approvalComment ? approvalComment.Comment : ''}\n                        </ChatMessage>\n                        {otherComments.length > 0 ? <OtherComments comments={otherComments} approval={approval} /> : null}\n                    </>);\n                }\n                return (<>\n                    <ChatMessage\n                        body={{ className: mergeClasses(styles.chatMessage, styles.chatPendingMessage) }}\n                        avatar={<Avatar name={name} color={directory ? directoryColors.get(directory) : \"neutral\"} />}\n                        author={name}\n                        decorationLabel={{\n                            className: styles.chatPendingDecorationLabel, \n                            children: t('Pending')\n                        }}\n                        decorationIcon={{ className: styles.chatPendingDecorationIcon, children: <ShieldRegular /> }}\n                    />\n                    {comments.length > 0 ? <OtherComments comments={comments} approval={approval} /> : null}\n                </>);\n            }}\n        />\n    );\n};","import { Chat } from \"@fluentui-contrib/react-chat\";\nimport type { Approval } from \"../../types\";\nimport { Divider, makeStyles } from \"@fluentui/react-components\";\nimport { ApprovalChatMessage } from \"./ApprovalChatMessage\";\nimport { t } from \"i18next\";\nimport { Fragment } from \"react/jsx-runtime\";\nimport { useFieldContext } from \"../../hooks/formContext\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: 'unset',\n        marginRight: 'unset',\n        marginLeft: 'unset'\n    }\n});\nexport default () => {\n    const styles = useStyles();\n    const approvals = useFieldContext<Approval[]>();\n    return (\n        <div>\n            {approvals.state.value.map((approval, index) => {\n                return (\n                    <Fragment key={index}>\n                        <Divider>{t(approval.Role)}</Divider>\n                        <Chat className={styles.root}>\n                            <ApprovalChatMessage approval={approval} />\n                        </Chat>\n                    </Fragment>\n                );\n            })}\n        </div>\n    );\n};"],"names":["useStyles","makeStyles","tokens","OtherComments","comments","approval","styles","timeZoneInfo","useFormInitQuery","userName","Chat","c","i","jsx","ChatMessage","mergeClasses","CommentRegular","dayjs","ApprovalChatMessage","t","useTranslation","form","useWfgFormContext","name","directory","s","approvalComment","otherComments","jsxs","Fragment","Avatar","directoryColors","ShieldTaskRegular","ShieldDismissRegular","ShieldRegular","index","approvals","useFieldContext","Divider"],"mappings":"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"}