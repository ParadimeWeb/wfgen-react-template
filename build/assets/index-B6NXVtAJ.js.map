{"version":3,"file":"index-B6NXVtAJ.js","sources":["../../src/components/Comments/CommentChatMessage.tsx","../../src/components/Comments/index.tsx"],"sourcesContent":["import { ChatMessage } from \"@fluentui-contrib/react-chat\";\nimport type { Comment } from \"../../types\";\nimport { Avatar, makeStyles, mergeClasses, tokens } from \"@fluentui/react-components\";\nimport { directoryColors } from \"../../utils\";\nimport dayjs from \"dayjs\";\nimport { CommentCheckmarkRegular, CommentDismissRegular } from \"@fluentui/react-icons\";\nimport { useFormInitQuery } from \"../../hooks/useFormInitQuery\";\n\nconst useStyles = makeStyles({\n    chatMessage: {\n        whiteSpace: 'pre-wrap'\n    },\n    chatRejectionMessage: {\n        borderLeftColor: tokens.colorPaletteRedBorder1\n    },\n    chatRejectionDecorationIcon: {\n        backgroundColor: tokens.colorPaletteRedBackground3\n    },\n    chatRejectionDecorationLabel: {\n        color: tokens.colorPaletteRedForeground1\n    },\n    chatApprovalMessage: {\n        borderLeftColor: tokens.colorPaletteGreenBorder1\n    },\n    chatApprovalDecorationIcon: {\n        backgroundColor: tokens.colorPaletteGreenBackground3\n    },\n    chatApprovalDecorationLabel: {\n        color: tokens.colorPaletteGreenForeground1\n    }\n});\n\nconst CommentChatMessageAvatar = ({ comment }: { comment: Comment }) => <Avatar name={comment.Author} color={directoryColors.get(comment.Directory)} />;\n\nexport const CommentChatMessage = ({ comment }: { comment: Comment }) => {\n    const styles = useStyles();\n    const { timeZoneInfo } = useFormInitQuery();\n    const timestamp = dayjs(comment.Created);\n    return (\n        <ChatMessage\n            body={{ className: styles.chatMessage }}\n            avatar={<CommentChatMessageAvatar comment={comment} />}\n            author={comment.Author}\n            decorationLabel={`${comment.ProcessName} / ${comment.ActivityName}`}\n            timestamp={timestamp.utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\n        >\n            {comment.Comment}\n        </ChatMessage>\n    );\n}\n\nexport const ApprovalCommentChatMessage = ({ comment }: { comment: Comment }) => {\n    const styles = useStyles();\n    const { timeZoneInfo } = useFormInitQuery();\n    const timestamp = dayjs(comment.Created);\n    return (\n        <ChatMessage\n            body={{ className: mergeClasses(styles.chatMessage, styles.chatApprovalMessage) }}\n            avatar={<CommentChatMessageAvatar comment={comment} />}\n            author={comment.Author}\n            decorationLabel={{ className: styles.chatApprovalDecorationLabel, children: `${comment.ProcessName} / ${comment.ActivityName}` }}\n            decorationIcon={{ className: styles.chatApprovalDecorationIcon, children: <CommentCheckmarkRegular /> }}\n            timestamp={timestamp.utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\n        >\n            {comment.Comment}\n        </ChatMessage>\n    );\n}\n\nexport const RejectionCommentChatMessage = ({ comment }: { comment: Comment }) => {\n    const styles = useStyles();\n    const { timeZoneInfo } = useFormInitQuery();\n    const timestamp = dayjs(comment.Created);\n    return (\n        <ChatMessage\n            body={{ className: mergeClasses(styles.chatMessage, styles.chatRejectionMessage) }}\n            avatar={<CommentChatMessageAvatar comment={comment} />}\n            author={comment.Author}\n            decorationLabel={{ className: styles.chatRejectionDecorationLabel, children: `${comment.ProcessName} / ${comment.ActivityName}` }}\n            decorationIcon={{ className: styles.chatRejectionDecorationIcon, children: <CommentDismissRegular /> }}\n            timestamp={timestamp.utcOffset(timeZoneInfo.UTCOffset).format('LLL')}\n        >\n            {comment.Comment}\n        </ChatMessage>\n    );\n}\n\nexport const commentChatMessages = new Map<Comment['Type'], ({ comment }: { comment: Comment }) => JSX.Element>([\n    [\"APPROVAL\", ApprovalCommentChatMessage],\n    [\"REJECTION\", RejectionCommentChatMessage],\n    [\"COMMENT\", CommentChatMessage]\n]);","import { Chat } from \"@fluentui-contrib/react-chat\";\nimport { commentChatMessages } from \"./CommentChatMessage\";\nimport type { Comment } from \"../../types\";\nimport { makeStyles } from \"@fluentui/react-components\";\nimport { useFieldContext } from \"../../hooks/formContext\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: 'unset',\n        marginRight: 'unset',\n        marginLeft: 'unset'\n    }\n});\nexport default () => {\n    const styles = useStyles();\n    const comments = useFieldContext<Comment[]>();\n    return (\n        <Chat className={styles.root}>\n            {comments.state.value.map((comment, i) => {\n                const CommentChatMessage = commentChatMessages.get(comment.Type)!;\n                return <CommentChatMessage key={i} comment={comment} />;\n            })}\n        </Chat>\n    );\n};"],"names":["useStyles","makeStyles","tokens","CommentChatMessageAvatar","comment","jsx","Avatar","directoryColors","CommentChatMessage","styles","timeZoneInfo","useFormInitQuery","timestamp","dayjs","ChatMessage","ApprovalCommentChatMessage","mergeClasses","CommentCheckmarkRegular","RejectionCommentChatMessage","CommentDismissRegular","commentChatMessages","index","comments","useFieldContext","Chat","i"],"mappings":"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"}